version: "3"
services:
  backend:
    platform: linux/amd64
    container_name: backend
    build:
      context: './'
      dockerfile: 'Dockerfile.development'
    command: uvicorn app.main:app --host 0.0.0.0 --port 8001 --reload
    volumes:
      - ./:/app
    depends_on:
      - db
    ports:
      - 8001:8001
    environment:
      - JWT_SECRET=${JWT_SECRET}
      - ALGORITHM=${ALGORITHM}
      - DATABASE_URL=${PROD_DB_URL}
      - TEST_DB_URL=${TEST_DB_URL}
      - FIRST_SUPERUSER=${FIRST_SUPERUSER}
      - FIRST_SUPERUSER_PW=${FIRST_SUPERUSER_PW}
      - WATCHFILES_FORCE_POLLING=true
      - ENVIRONMENT=dev
      - USE_NGROK=False
    env_file:
      - .env

  db:
    container_name: db
    image: postgres:14  # https://hub.docker.com/_/postgres
    ports:
      - "5432:5432"
    volumes:
      - app-data:/var/lib/postgresql/data/pgdata
    environment:
      - PGDATA=/var/lib/postgresql/data/pgdata
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=the_villagers

  pgadmin:
    container_name: pgadmin4
    image: dpage/pgadmin4
    depends_on:
      - db
    ports:
      - "5555:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: pgadmin4@pgadmin.org
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: unless-stopped

  # ngrok:
  #   image: ngrok/ngrok:latest
  #   restart: unless-stopped
  #   env_file:
  #     - .env
  #   environment:
  #       NGROK_AUTHTOKEN: ${AUTH_TOKEN}
  #   command: 'http backend:8001 --domain=oyinda.ngrok.app'
  #   volumes:
  #     - ./ngrok.yml:/etc/ngrok.yml
  #   ports:
  #     - 4040:4040
volumes:
  app-data:
